{
  "compileOnSave": true,
  "compilerOptions": {
    "target": "es6",
    "module": "es2015",
    "declaration": false,
    "sourceMap": true,
    "jsx": "preserve",
    "watch": true,
    "noImplicitAny": false,
    "removeComments": true,
    "allowSyntheticDefaultImports": true,
    "moduleResolution": "node"
  },
  "filesGlob": [
    "**/*.ts",
    "**/*.tsx",
    "!node_modules/**/*.ts"
  ],
  "files": [
    "__/components/index.ts",
    "__/profile/components/index.ts",
    "__/security/components/index.ts",
    "__/writing/components/index.ts",
    "components/index.ts",
    "lib/actions/account.ts",
    "lib/actions/config.ts",
    "lib/actions/types.ts",
    "lib/api/api.ts",
    "lib/api/client/files/index.ts",
    "lib/api/client/index.ts",
    "lib/api/client/users/index.ts",
    "lib/api/client/writing/index.ts",
    "lib/api/http.ts",
    "lib/api/utils/base64.ts",
    "lib/api/utils/utf8.ts",
    "lib/client.ts",
    "lib/enums/alert/index.ts",
    "lib/enums/index.ts",
    "lib/enums/restMethod/index.ts",
    "lib/models/account/index.ts",
    "lib/models/config/index.ts",
    "lib/models/error/index.ts",
    "lib/models/group/index.ts",
    "lib/models/index.ts",
    "lib/models/options/index.ts",
    "lib/models/publishmentSystem/index.ts",
    "lib/models/tableStyle/index.ts",
    "lib/models/user/index.ts",
    "lib/models/userLog/index.ts",
    "lib/reducers/account.ts",
    "lib/reducers/config.ts",
    "lib/reducers/index.ts",
    "lib/utils/const/index.ts",
    "lib/utils/index.ts",
    "lib/utils/swal/index.ts",
    "lib/utils/upload/index.ts",
    "lib/utils/utilities/index.ts",
    "typings/classnames/classnames.d.ts",
    "typings/is_js/is_js.d.ts",
    "typings/jquery/jquery.d.ts",
    "typings/lodash/lodash.d.ts",
    "typings/moment/moment.d.ts",
    "typings/node/node.d.ts",
    "typings/object-assign/object-assign.d.ts",
    "typings/rc-upload/rc-upload.d.ts",
    "typings/react-datetime/react-datetime.d.ts",
    "typings/react-redux/react-redux.d.ts",
    "typings/react-router/history.d.ts",
    "typings/react-router/react-router.d.ts",
    "typings/react-select/react-select.d.ts",
    "typings/react/react-dom.d.ts",
    "typings/react/react.d.ts",
    "typings/redux-logger/redux-logger.d.ts",
    "typings/redux-persist/redux-persist.d.ts",
    "typings/redux-thunk/redux-thunk.d.ts",
    "typings/redux/redux.d.ts",
    "typings/sweetalert/sweetalert.d.ts",
    "typings/ueditor/ueditor.d.ts",
    "__/components/header/index.tsx",
    "__/components/imageUpload/index.tsx",
    "__/components/ueditor/index.tsx",
    "__/index.tsx",
    "__/layout.tsx",
    "__/profile/avatar/index.tsx",
    "__/profile/basic/index.tsx",
    "__/profile/components/menu/index.tsx",
    "__/profile/detail/index.tsx",
    "__/profile/layout.tsx",
    "__/profile/username/index.tsx",
    "__/security/components/menu/index.tsx",
    "__/security/email/index.tsx",
    "__/security/index.tsx",
    "__/security/layout.tsx",
    "__/security/logs_login/index.tsx",
    "__/security/logs_sensitive/index.tsx",
    "__/security/mobile/index.tsx",
    "__/security/password/index.tsx",
    "__/writing/components/attributes/index.tsx",
    "__/writing/components/menu/index.tsx",
    "__/writing/edit/__publishmentSystemId__nodeId__id/index.tsx",
    "__/writing/index.tsx",
    "__/writing/layout.tsx",
    "__/writing/list/index.tsx",
    "__/writing/new/index.tsx",
    "components/footer/index.tsx",
    "components/loading/index.tsx",
    "components/miniLoading/index.tsx",
    "findpwd/index.tsx",
    "layout.tsx",
    "login/index.tsx",
    "logout/index.tsx",
    "reg/index.tsx",
    "z404/index.tsx"
  ],
  "exclude": [
    "bower_components",
    "node_modules",
    "public"
  ],
  "formatCodeOptions": {
    "indentSize": 2,
    "tabSize": 2,
    "newLineCharacter": "\r\n",
    "convertTabsToSpaces": true,
    "insertSpaceAfterCommaDelimiter": true,
    "insertSpaceAfterSemicolonInForStatements": true,
    "insertSpaceBeforeAndAfterBinaryOperators": true,
    "insertSpaceAfterKeywordsInControlFlowStatements": true,
    "insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,
    "insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
    "placeOpenBraceOnNewLineForFunctions": false,
    "placeOpenBraceOnNewLineForControlBlocks": false
  },
  "vscode": {
    "rewriteTsconfig": true
  }
}
